SELECT * FROM BOOKS;
SELECT * FROM MEMBERS;


SELECT
M.M_NAME 회원명,
COUNT(R.ST_DATE) 대여권수
FROM RENT R, MEMBERS M
WHERE R.M_NUM = M.M_NUM
GROUP BY M.M_NAME
ORDER BY 2;



select * from members m, books b, rent r
where r.m_num=m.m_num and r.no=b.no order by m.m_num;

select
decode(substr(m.sex,1,1),'m','남','여')성별,
substr(m.age,1,1)||'0대' 연령대,
count(decode(substr(b.genere,1,2),'총류','총류'))총류,
count(decode(substr(b.genere, 1,2),'예술','예술'))예술,
count(decode(substr(b.genere,1,2),'기술','기술'))기술,
count(decode(substr(b.genere, 1,2),'언어','언어'))언어,
count(decode(substr(b.genere,1,2),'철학','철학'))철학,
count(decode(substr(b.genere,1,2),'종교','종교'))종교,
count(decode(substr(b.genere,1,2),'순수','순수'))순수,
count(decode(substr(b.genere,1,2),'사회','사회'))사회,
count(decode(substr(b.genere,1,2),'역사','역사'))역사,
count(decode(substr(b.genere,1,2),'문학','문학'))문학,
count(substr(r.no,1,1))"합계"
from members m , books b, rent r
where r.m_num=m.m_num and r.no=b.no
group by (substr(m.sex,1,1),substr(m.age,1,1))
order by substr(m.sex,1,1)desc,substr(m.age,1,1);




create or replace view view_1 as
select m.m_num num, b.genere genere, count(genere) count
from members m, books b, rent r
where m.m_num=r.m_num and b.no=r.no
group by m.m_num, genere;

create or replace view view_2 as
select v.num num,
max(genere) keep(dense_rank first order by count desc) as genere
from view_1 v
group by v.num;

select rnum 순위, name 이름, total 빌린횟수, genere 장르
from(
select rownum rnum, a.* from(
select m.m_name name, count(*) total, v.genere genere
from members m, rent r, view_2 v
where m.m_num = r.m_num and m.m_num=v.num
group by m.m_name, v.genere
order by 2 desc) a);

--연체자
select 
r.m_num 회원번호, m.m_name 이름,
decode(r.fin_date, null, '연체중') 반납여부
,count(*) 연체횟수
from rent r, members m
where substr(r.st_date,1,1) = 2 
and r.fin_date is null 
and r.m_num = m.m_num 
group by r.m_num,m.m_name,
decode(r.fin_date, null, '연체중')
order by 1 asc;

--연체금액
select 
r.m_num 회원번호,
m.m_name 회원이름,
count(*) 연체횟수,
sum(to_date(to_char(due_date, 'yyyymmdd'))-to_date(fin_date)) 연체일,
to_char((sum(to_date(to_char(fin_date, 'yyyymmdd'))-to_date(due_date))*1000),'999,999') 연체료
from rent r, members m
where to_date(to_char(fin_date, 'yyyymmdd'))-to_date(due_date) > 0 
and r.m_num = m.m_num
group by 
r.m_num, m.m_name
order by 1;

select
m.address 연체지역,
decode(r.fin_date, null, '연체중') 반납여부,
count(*) 연체횟수
from rent r, members m 
where r.m_num = m.m_num and substr(r.st_date,1,1) = 2 
and r.fin_date is null
group by m.address,
decode(r.fin_date, null, '연체중')
order by 1;

select
m.address 연체지역,
count(*)||'명' 연체자
from rent r, members m 
where r.m_num = m.m_num and substr(r.st_date,1,1) = 2 
and r.fin_date is null
group by m.address,
decode(r.fin_date, null, '연체중')
order by 1;

select
case
when  substr(m.sex,1,1)='m' then '남'
when  substr(m.sex,1,1)='f' then '여'
when substr(m.sex,1,1) is null then '남,여 총합'
end 성별,
decode(substr(m.age,1,1)||'0대','0대',' 합계',substr(m.age,1,1)||'0대') 연령대,
count(decode(substr(b.genere,1,2),'총류','총류'))총류,
count(decode(substr(b.genere,1,2),'예술','예술'))예술,
count(decode(substr(b.genere,1,2),'기술','기술'))기술,
count(decode(substr(b.genere,1,2),'언어','언어'))언어,
count(decode(substr(b.genere,1,2),'철학','철학'))철학,
count(decode(substr(b.genere,1,2),'종교','종교'))종교,
count(decode(substr(b.genere,1,2),'순수','순수'))순수,
count(decode(substr(b.genere,1,2),'사회','사회'))사회,
count(decode(substr(b.genere,1,2),'역사','역사'))역사,
count(decode(substr(b.genere,1,2),'문학','문학'))문학,
count(substr(r.no,1,1))"합계"
from members m , books b, rent r
where r.m_num=m.m_num and r.no=b.no
group by rollup(substr(m.sex,1,1),substr(m.age,1,1))
order by substr(m.sex,1,1)desc,substr(m.age,1,1);


SELECT TO B.*
FROM BOOKS B LEFT OUTER JOIN RENT R ON
(B.NO = R.NO)
WHERE R.NO IS NULL
ORDER BY 1;

SELECT B.*
FROM BOOKS B LEFT;

SELECT
RANK() OVER (ORDER BY COUNT(R.ST_DATE) DESC) 순위, 
M.M_NAME 회원명, 
COUNT(R.ST_DATE) 대여권수
FROM RENT R, MEMBERS M
WHERE R.M_NUM = M.M_NUM
GROUP BY M.M_NAME
ORDER BY COUNT(R.ST_DATE) DESC;

select
case
when  substr(m.sex,1,1)='m' then '남'
when  substr(m.sex,1,1)='f' then '여'
when substr(m.sex,1,1) is null then '총합'
end 성별,
decode(substr(m.age,1,1)||'0대','0대',' 합계',substr(m.age,1,1)||'0대') 연령대,
count(decode(substr(b.genere,1,2),'총류','총류'))총류,
count(decode(substr(b.genere,1,2),'예술','예술'))예술,
count(decode(substr(b.genere,1,2),'기술','기술'))기술,
count(decode(substr(b.genere,1,2),'언어','언어'))언어,
count(decode(substr(b.genere,1,2),'철학','철학'))철학,
count(decode(substr(b.genere,1,2),'종교','종교'))종교,
count(decode(substr(b.genere,1,2),'순수','순수'))순수,
count(decode(substr(b.genere,1,2),'사회','사회'))사회,
count(decode(substr(b.genere,1,2),'역사','역사'))역사,
count(decode(substr(b.genere,1,2),'문학','문학'))문학,
count(substr(r.no,1,1))"합계"
from members m , books b, rent r
where r.m_num=m.m_num and r.no=b.no
group by rollup(substr(m.sex,1,1),substr(m.age,1,1))
order by 1 ,substr(m.age,1,1

--2 93,94,97 내용 추가
insert into rent(m_num, st_date, due_date, fin_date,no) values (93,null,null,null,null);
insert into rent(m_num, st_date, due_date, fin_date,no) values (94,null,null,null,null);
insert into rent(m_num, st_date, due_date, fin_date,no) values (97,null,null,null,null);
--2 연체자
select 
r.m_num 회원번호, m.m_name 이름,
decode(r.fin_date, null, '연체중') 반납여부,
count(*)||'번' 연체횟수
from rent r, members m
where substr(r.st_date,1,1) = 2 
and r.fin_date is null 
and r.m_num = m.m_num 
group by r.m_num,m.m_name,
decode(r.fin_date, null, '연체중')
order by 1 asc;


--2 연체금액
select 
r.m_num 회원번호,
m.m_name 회원이름,
count(*)||'번' 연체횟수,
sum(to_date(fin_date)-to_date(to_char(due_date, 'yyyymmdd')))||'일' 연체일,
to_char((sum(to_date(to_char(fin_date, 'yyyymmdd'))-to_date(due_date))*1000),'999,999')||'원' 연체료
from rent r, members m
where to_date(to_char(fin_date, 'yyyymmdd'))-to_date(due_date) > 0 
and r.m_num = m.m_num
group by 
r.m_num, m.m_name
order by 1;

--2 연체지역
select
m.address 연체지역,
count(*)||'명' 총연체자
from rent r, members m 
where r.m_num = m.m_num and substr(r.st_date,1,1) = 2 
and r.fin_date is null
group by m.address,
decode(r.fin_date, null, '연체중')
order by 2 desc;


--다독왕
create or replace view view_1 as
select m.m_num num, b.genere genere, count(genere) count
from members m, books b, rent r
where m.m_num=r.m_num and b.no=r.no
group by m.m_num, genere;
select * from view_1
order by 1;

create or replace view view_2 as
select v.num num,
max(genere) keep(dense_rank first order by count desc) as genere
from view_1 v
group by v.num;
select * from view_2;

select rnum 순위, name 회원이름, total 빌린횟수, genere 장르
from(
select rownum rnum, a.* from(
select m.m_name name, count(*) total, v.genere genere
from members m, rent r, view_2 v
where m.m_num = r.m_num and m.m_num=v.num
group by m.m_name, v.genere
order by 2 desc) a);



--v3 --지역에 따른 장르별 빌린 권 수
create or replace view view_3 as
select m.address address, b.genere genere,  count(*) count
from members m, books b, rent r
where m.m_num=r.m_num and b.no=r.no
group by genere, m.address order by m.address, count desc;
select * from view_3;
--v4 --지역에 따른 장르별 빌린 순위(v3의count가져와서 rank())
create or replace view view_4 as
select v.address address, v.genere genere,
rank() over(partition by v.address order by v.count desc)rank
from view_3 v;
select * from view_4;
--v5 --v4에서 rank가 1인것만 가져옴
create or replace view view_5 as
select v.address 지역, v.genere 장르, v.rank
from view_4 v where v.rank=1;
select * from view_5;


select r.m_num,m.m_name, count(r.st_date) 누적대여횟수, m.grade 등급, case
when grade='1' then '5권'
when grade='2' then '4권'
when grade='3' then '3권'
when grade='4' then '2권'
else '1권' end "대여가능권수"
from members m, rent r
where m.m_num = r.m_num
group by (r.m_num, m.m_name, m.grade)
order by r.m_num;




